Session.setDefault('network', false);

// MAIN-NET CONTRACT ADDRESS
var mainNetAddress = '0x273930d21e01ee25e4c219b63259d214872220a2';
var testNetAddress = '0x1d649ca03d1bcd84877482c1dd8d3f9a7398728f'; // morden testnet

walletInterface = [{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"removeOwner","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_addr","type":"address"}],"name":"isOwner","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"m_numOwners","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"m_lastDay","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"version","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"resetSpentToday","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"m_spentToday","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"addOwner","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"m_required","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_h","type":"bytes32"}],"name":"confirm","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_newLimit","type":"uint256"}],"name":"setDailyLimit","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"},{"name":"_data","type":"bytes"}],"name":"execute","outputs":[{"name":"_r","type":"bytes32"}],"type":"function"},{"constant":false,"inputs":[{"name":"_operation","type":"bytes32"}],"name":"revoke","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_newRequired","type":"uint256"}],"name":"changeRequirement","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"_operation","type":"bytes32"},{"name":"_owner","type":"address"}],"name":"hasConfirmed","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"kill","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"}],"name":"changeOwner","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"m_dailyLimit","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"inputs":[{"name":"_owners","type":"address[]"},{"name":"_required","type":"uint256"},{"name":"_daylimit","type":"uint256"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"owner","type":"address"},{"indexed":false,"name":"operation","type":"bytes32"}],"name":"Confirmation","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"owner","type":"address"},{"indexed":false,"name":"operation","type":"bytes32"}],"name":"Revoke","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldOwner","type":"address"},{"indexed":false,"name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"newOwner","type":"address"}],"name":"OwnerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldOwner","type":"address"}],"name":"OwnerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"newRequirement","type":"uint256"}],"name":"RequirementChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"owner","type":"address"},{"indexed":false,"name":"value","type":"uint256"},{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"data","type":"bytes"}],"name":"SingleTransact","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"owner","type":"address"},{"indexed":false,"name":"operation","type":"bytes32"},{"indexed":false,"name":"value","type":"uint256"},{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"data","type":"bytes"}],"name":"MultiTransact","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"operation","type":"bytes32"},{"indexed":false,"name":"initiator","type":"address"},{"indexed":false,"name":"value","type":"uint256"},{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"data","type":"bytes"}],"name":"ConfirmationNeeded","type":"event"}];
WalletContract = web3.eth.contract(walletInterface);

walletABI = '';
walletStubABI = '0x606060405260026101086000505560405161015638038061015683398101604052805160805160a051919092019190808383815160019081018155600090600160a060020a0332169060029060038390559183525061010260205260408220555b82518110156100eb57828181518110156100025790602001906020020151600160a060020a03166002600050826002016101008110156100025790900160005081905550806002016101026000506000858481518110156100025790602001906020020151600160a060020a0316815260200190815260200160002060005081905550600101610060565b81600060005081905550505050806101056000508190555061010f62015180420490565b61010755505050506031806101256000396000f3003660008037602060003660003473cafecafecafecafecafecafecafecafecafecafe61235a5a03f21560015760206000f3';
originalContractAddress = mainNetAddress;

// CONTRACT VERSIONS
contractVersions = [
    // 0 foundation
    {
        original: '971ac1efe62de02ab7497cf2cad2b93ce990a8d11c3a544943baf807e42eab7d',
        stub: false,
        // version 0 with tx.origin
        address: '0x4efc6389b88569a375668b7b3bd4a9b6c8f4a942'
    },
    // 1 better daily limit
    { 
        original: '8207780d6fb31803373aff97360562231187ebb0da6b4678eeb68ceb16897509',
        stub: '',
        address: '0x273930d21e01ee25e4c219b63259d214872220a2'
    }
];




/**
Replaces the address in the stub code "walletStubABI" variable.

@method replaceStubAddress
*/
var replaceStubAddress = function(address) {
    walletStubABI = walletStubABI.replace('cafecafecafecafecafecafecafecafecafecafe', address.replace('0x',''));
    // set this address as used address
    originalContractAddress = address;
    return walletStubABI;
};

/**
Deploys testnet wallet, when on other orig wallet was found

@method deployTestnetWallet
*/
var deployTestnetWallet = function() {
    var account = web3.eth.accounts[0];

    EthElements.Modal.question({
        text: new Spacebars.SafeString(TAPi18n.__('wallet.modals.testnetWallet.walletNeedsDeployment', {account: account})),
        cancel: true,
        ok: function() {

            // show loading
            EthElements.Modal.show('views_modals_loading', {closeable: false});

            // deploy testnet wallet
            WalletContract.new([],'','', {
                from: account,
                data: walletABI,
                gas: 2000000,
            }, function (e, contract) {
                if(!e) {
                    if(contract.address) {
                        console.log('Contract created at: ', contract.address);

                        LocalStore.set('ethereum_testnetWalletContractAddress', contract.address);
                        replaceStubAddress(contract.address);

                        EthElements.Modal.question({
                            text: new Spacebars.SafeString(TAPi18n.__('wallet.modals.testnetWallet.testnetWalletDeployed', {address: contract.address})),
                            ok: true
                        });

                    } else {
                        console.log('Contract creation transaction hash: ', contract.transactionHash);
                    }

                } else {
                    GlobalNotification.error({
                        content: e.message,
                        duration: 8
                    });

                    EthElements.Modal.hide();
                }
            });
        }
    },{
        closeable: false
    });

}

/**
Checks the main and testnet address

@method checkCodeOnAddress
*/
var checkCodeOnAddress = function(address, callback) {
    // see if the original wallet is deployed, if not re-deploy on testnet
    web3.eth.getCode(address, function(e, code) {
        if(!e) {
            if(code.length > 2) {
                replaceStubAddress(address);

                if(address === mainNetAddress) {
                    console.log('Use Main-net wallet as code base for stubs on address: ', address);
                    Session.set('network', 'mainnet');
                }
                if(address === testNetAddress) {
                    console.log('Use Test-net wallet as code base for stubs on address: ', address);
                    Session.set('network', 'testnet');
                }
            
            // use testnet or private net address, or re-deploy
            } else {

                callback();                
            }
        } else {
            GlobalNotification.error({
                content: e.message,
                duration: 8
            });
        }
    });
}


/**
Checks if the original wallet exists, if not deploys it

@method checkForOriginalWallet
*/
checkForOriginalWallet = function() {

    var balance = _.reduce(_.pluck(EthAccounts.find({}).fetch(), 'balance'), function(memo, num){ return memo + Number(num); }, 0);
    
    // Only check for the wallet if user has enough funds to deploy it
    if (web3.fromWei(balance, 'ether') > 0.25) {     
        // see if the original wallet is deployed, if not re-deploy on testnet
        checkCodeOnAddress(mainNetAddress, function() {
            checkCodeOnAddress(testNetAddress, function() {
                var privateNetAddress = LocalStore.get('ethereum_testnetWalletContractAddress');

                if(privateNetAddress)
                    web3.eth.getCode(privateNetAddress, function(e, code) {
                        if(!e) {
                            if(code.length > 2) {
                                replaceStubAddress(privateNetAddress);
                                console.log('Use private-net wallet as code base for stubs on address: ', privateNetAddress);
                                Session.set('network', 'privatenet');
                            } else {
                                deployTestnetWallet();
                            }
                        } else {
                            GlobalNotification.error({
                                content: e.message,
                                duration: 8
                            });
                        }
                    });
                else
                    deployTestnetWallet();
            });
        });
    } 
}

